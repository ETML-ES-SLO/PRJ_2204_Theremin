

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 29 17:11:15 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _LATEbits	set	3981
    49   000000                     _TRISEbits	set	3990
    50                           
    51                           ; #config settings
    52                           
    53                           	psect	cinit
    54   007F46                     __pcinit:
    55                           	callstack 0
    56   007F46                     start_initialization:
    57                           	callstack 0
    58   007F46                     __initialization:
    59                           	callstack 0
    60   007F46                     end_of_initialization:
    61                           	callstack 0
    62   007F46                     __end_of__initialization:
    63                           	callstack 0
    64   007F46  0100               	movlb	0
    65   007F48  EFB7  F03F         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68   000001                     __pcstackCOMRAM:
    69                           	callstack 0
    70   000001                     delay@cntr:
    71                           	callstack 0
    72                           
    73                           ; 4 bytes @ 0x0
    74   000001                     	ds	4
    75   000005                     main@x:
    76                           	callstack 0
    77                           
    78                           ; 2 bytes @ 0x4
    79   000005                     	ds	2
    80   000007                     main@x_81:
    81                           	callstack 0
    82                           
    83                           ; 2 bytes @ 0x6
    84   000007                     	ds	2
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 65 in file "main.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;  x               2    6[COMRAM] int 
    96 ;;  x               2    4[COMRAM] int 
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, status,0, cstack
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         4       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         4       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        4 bytes
   111 ;; Hardware stack levels required when called: 1
   112 ;; This function calls:
   113 ;;		_delay
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120   007F6E                     __ptext0:
   121                           	callstack 0
   122   007F6E                     _main:
   123                           	callstack 30
   124   007F6E                     
   125                           ;main.c: 67:     TRISEbits.TRISE0 = 1;
   126   007F6E  8096               	bsf	150,0,c	;volatile
   127                           
   128                           ;main.c: 68:     TRISEbits.TRISE1 = 1;
   129   007F70  8296               	bsf	150,1,c	;volatile
   130                           
   131                           ;main.c: 69:     TRISEbits.TRISE2 = 1;
   132   007F72  8496               	bsf	150,2,c	;volatile
   133   007F74                     l11:
   134                           
   135                           ;main.c: 71:  {;main.c: 72:              LATEbits.LATE0=1;
   136   007F74  808D               	bsf	141,0,c	;volatile
   137                           
   138                           ;main.c: 73:              LATEbits.LATE1=0;
   139   007F76  928D               	bcf	141,1,c	;volatile
   140                           
   141                           ;main.c: 74:              LATEbits.LATE2=1;
   142   007F78  848D               	bsf	141,2,c	;volatile
   143   007F7A                     
   144                           ;main.c: 76:           for ( int x=0; x<=10; x++ )
   145   007F7A  0E00               	movlw	0
   146   007F7C  6E06               	movwf	(main@x+1)^0,c
   147   007F7E  0E00               	movlw	0
   148   007F80  6E05               	movwf	main@x^0,c
   149   007F82                     l742:
   150                           
   151                           ;main.c: 77:             {;main.c: 78:               delay (1000);
   152   007F82  0EE8               	movlw	232
   153   007F84  6E01               	movwf	delay@cntr^0,c
   154   007F86  0E03               	movlw	3
   155   007F88  6E02               	movwf	(delay@cntr+1)^0,c
   156   007F8A  0E00               	movlw	0
   157   007F8C  6E03               	movwf	(delay@cntr+2)^0,c
   158   007F8E  0E00               	movlw	0
   159   007F90  6E04               	movwf	(delay@cntr+3)^0,c
   160   007F92  ECA6  F03F         	call	_delay	;wreg free
   161   007F96                     
   162                           ;main.c: 81:             }
   163   007F96  4A05               	infsnz	main@x^0,f,c
   164   007F98  2A06               	incf	(main@x+1)^0,f,c
   165   007F9A  BE06               	btfsc	(main@x+1)^0,7,c
   166   007F9C  EFD9  F03F         	goto	u51
   167   007FA0  5006               	movf	(main@x+1)^0,w,c
   168   007FA2  E109               	bnz	u50
   169   007FA4  0E0B               	movlw	11
   170   007FA6  5C05               	subwf	main@x^0,w,c
   171   007FA8  A0D8               	btfss	status,0,c
   172   007FAA  EFD9  F03F         	goto	u51
   173   007FAE  EFDB  F03F         	goto	u50
   174   007FB2                     u51:
   175   007FB2  EFC1  F03F         	goto	l742
   176   007FB6                     u50:
   177   007FB6                     
   178                           ;main.c: 82:              LATEbits.LATE0=0;
   179   007FB6  908D               	bcf	141,0,c	;volatile
   180                           
   181                           ;main.c: 83:              LATEbits.LATE1=1;
   182   007FB8  828D               	bsf	141,1,c	;volatile
   183                           
   184                           ;main.c: 84:              LATEbits.LATE2=0;
   185   007FBA  948D               	bcf	141,2,c	;volatile
   186   007FBC                     
   187                           ;main.c: 86:           for ( int x=0; x<=10; x++ )
   188   007FBC  0E00               	movlw	0
   189   007FBE  6E08               	movwf	(main@x_81+1)^0,c
   190   007FC0  0E00               	movlw	0
   191   007FC2  6E07               	movwf	main@x_81^0,c
   192   007FC4                     l754:
   193                           
   194                           ;main.c: 88:             {;main.c: 89:               delay (1000);
   195   007FC4  0EE8               	movlw	232
   196   007FC6  6E01               	movwf	delay@cntr^0,c
   197   007FC8  0E03               	movlw	3
   198   007FCA  6E02               	movwf	(delay@cntr+1)^0,c
   199   007FCC  0E00               	movlw	0
   200   007FCE  6E03               	movwf	(delay@cntr+2)^0,c
   201   007FD0  0E00               	movlw	0
   202   007FD2  6E04               	movwf	(delay@cntr+3)^0,c
   203   007FD4  ECA6  F03F         	call	_delay	;wreg free
   204   007FD8                     
   205                           ;main.c: 92:             }
   206   007FD8  4A07               	infsnz	main@x_81^0,f,c
   207   007FDA  2A08               	incf	(main@x_81+1)^0,f,c
   208   007FDC  BE08               	btfsc	(main@x_81+1)^0,7,c
   209   007FDE  EFFA  F03F         	goto	u61
   210   007FE2  5008               	movf	(main@x_81+1)^0,w,c
   211   007FE4  E109               	bnz	u60
   212   007FE6  0E0B               	movlw	11
   213   007FE8  5C07               	subwf	main@x_81^0,w,c
   214   007FEA  A0D8               	btfss	status,0,c
   215   007FEC  EFFA  F03F         	goto	u61
   216   007FF0  EFFC  F03F         	goto	u60
   217   007FF4                     u61:
   218   007FF4  EFE2  F03F         	goto	l754
   219   007FF8                     u60:
   220   007FF8  EFBA  F03F         	goto	l11
   221   007FFC  EF00  F000         	goto	start
   222   008000                     __end_of_main:
   223                           	callstack 0
   224                           
   225 ;; *************** function _delay *****************
   226 ;; Defined at:
   227 ;;		line 98 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;  cntr            4    0[COMRAM] unsigned long 
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         4       0       0       0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0
   244 ;;      Totals:         4       0       0       0       0       0       0       0       0
   245 ;;Total ram usage:        4 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text1
   255   007F4C                     __ptext1:
   256                           	callstack 0
   257   007F4C                     _delay:
   258                           	callstack 30
   259   007F4C                     l732:
   260   007F4C  0601               	decf	delay@cntr^0,f,c
   261   007F4E  0E00               	movlw	0
   262   007F50  5A02               	subwfb	(delay@cntr+1)^0,f,c
   263   007F52  5A03               	subwfb	(delay@cntr+2)^0,f,c
   264   007F54  5A04               	subwfb	(delay@cntr+3)^0,f,c
   265   007F56  5001               	movf	delay@cntr^0,w,c
   266   007F58  1002               	iorwf	(delay@cntr+1)^0,w,c
   267   007F5A  1003               	iorwf	(delay@cntr+2)^0,w,c
   268   007F5C  1004               	iorwf	(delay@cntr+3)^0,w,c
   269   007F5E  A4D8               	btfss	status,2,c
   270   007F60  EFB4  F03F         	goto	u41
   271   007F64  EFB6  F03F         	goto	u40
   272   007F68                     u41:
   273   007F68  EFA6  F03F         	goto	l732
   274   007F6C                     u40:
   275   007F6C  0012               	return		;funcret
   276   007F6E                     __end_of_delay:
   277                           	callstack 0
   278   000000                     
   279                           	psect	rparam
   280   000000                     
   281                           	psect	idloc
   282                           
   283                           ;Config register IDLOC0 @ 0x200000
   284                           ;	unspecified, using default values
   285   200000                     	org	2097152
   286   200000  FF                 	db	255
   287                           
   288                           ;Config register IDLOC1 @ 0x200001
   289                           ;	unspecified, using default values
   290   200001                     	org	2097153
   291   200001  FF                 	db	255
   292                           
   293                           ;Config register IDLOC2 @ 0x200002
   294                           ;	unspecified, using default values
   295   200002                     	org	2097154
   296   200002  FF                 	db	255
   297                           
   298                           ;Config register IDLOC3 @ 0x200003
   299                           ;	unspecified, using default values
   300   200003                     	org	2097155
   301   200003  FF                 	db	255
   302                           
   303                           ;Config register IDLOC4 @ 0x200004
   304                           ;	unspecified, using default values
   305   200004                     	org	2097156
   306   200004  FF                 	db	255
   307                           
   308                           ;Config register IDLOC5 @ 0x200005
   309                           ;	unspecified, using default values
   310   200005                     	org	2097157
   311   200005  FF                 	db	255
   312                           
   313                           ;Config register IDLOC6 @ 0x200006
   314                           ;	unspecified, using default values
   315   200006                     	org	2097158
   316   200006  FF                 	db	255
   317                           
   318                           ;Config register IDLOC7 @ 0x200007
   319                           ;	unspecified, using default values
   320   200007                     	org	2097159
   321   200007  FF                 	db	255
   322                           
   323                           	psect	config
   324                           
   325                           ;Config register CONFIG1L @ 0x300000
   326                           ;	PLL Prescaler Selection bits
   327                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   328                           ;	System Clock Postscaler Selection bits
   329                           ;	CPUDIV = OSC4_PLL6, [Primary Oscillator Src: /4][96 MHz PLL Src: /6]
   330                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   331                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   332   300000                     	org	3145728
   333   300000  18                 	db	24
   334                           
   335                           ;Config register CONFIG1H @ 0x300001
   336                           ;	Oscillator Selection bits
   337                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   338                           ;	Fail-Safe Clock Monitor Enable bit
   339                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   340                           ;	Internal/External Oscillator Switchover bit
   341                           ;	IESO = OFF, Oscillator Switchover mode disabled
   342   300001                     	org	3145729
   343   300001  05                 	db	5
   344                           
   345                           ;Config register CONFIG2L @ 0x300002
   346                           ;	Power-up Timer Enable bit
   347                           ;	PWRT = OFF, PWRT disabled
   348                           ;	Brown-out Reset Enable bits
   349                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   350                           ;	Brown-out Reset Voltage bits
   351                           ;	BORV = 3, Minimum setting 2.05V
   352                           ;	USB Voltage Regulator Enable bit
   353                           ;	VREGEN = OFF, USB voltage regulator disabled
   354   300002                     	org	3145730
   355   300002  1F                 	db	31
   356                           
   357                           ;Config register CONFIG2H @ 0x300003
   358                           ;	Watchdog Timer Enable bit
   359                           ;	WDT = ON, WDT enabled
   360                           ;	Watchdog Timer Postscale Select bits
   361                           ;	WDTPS = 32768, 1:32768
   362   300003                     	org	3145731
   363   300003  1F                 	db	31
   364                           
   365                           ; Padding undefined space
   366   300004                     	org	3145732
   367   300004  FF                 	db	255
   368                           
   369                           ;Config register CONFIG3H @ 0x300005
   370                           ;	CCP2 MUX bit
   371                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   372                           ;	PORTB A/D Enable bit
   373                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   374                           ;	Low-Power Timer 1 Oscillator Enable bit
   375                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   376                           ;	MCLR Pin Enable bit
   377                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   378   300005                     	org	3145733
   379   300005  83                 	db	131
   380                           
   381                           ;Config register CONFIG4L @ 0x300006
   382                           ;	Stack Full/Underflow Reset Enable bit
   383                           ;	STVREN = ON, Stack full/underflow will cause Reset
   384                           ;	Single-Supply ICSP Enable bit
   385                           ;	LVP = ON, Single-Supply ICSP enabled
   386                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   387                           ;	ICPRT = OFF, ICPORT disabled
   388                           ;	Extended Instruction Set Enable bit
   389                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   390                           ;	Background Debugger Enable bit
   391                           ;	DEBUG = 0x1, unprogrammed default
   392   300006                     	org	3145734
   393   300006  85                 	db	133
   394                           
   395                           ; Padding undefined space
   396   300007                     	org	3145735
   397   300007  FF                 	db	255
   398                           
   399                           ;Config register CONFIG5L @ 0x300008
   400                           ;	Code Protection bit
   401                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   402                           ;	Code Protection bit
   403                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   404                           ;	Code Protection bit
   405                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   406                           ;	Code Protection bit
   407                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   408   300008                     	org	3145736
   409   300008  0F                 	db	15
   410                           
   411                           ;Config register CONFIG5H @ 0x300009
   412                           ;	Boot Block Code Protection bit
   413                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   414                           ;	Data EEPROM Code Protection bit
   415                           ;	CPD = OFF, Data EEPROM is not code-protected
   416   300009                     	org	3145737
   417   300009  C0                 	db	192
   418                           
   419                           ;Config register CONFIG6L @ 0x30000A
   420                           ;	Write Protection bit
   421                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   422                           ;	Write Protection bit
   423                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   424                           ;	Write Protection bit
   425                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   426                           ;	Write Protection bit
   427                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   428   30000A                     	org	3145738
   429   30000A  0F                 	db	15
   430                           
   431                           ;Config register CONFIG6H @ 0x30000B
   432                           ;	Configuration Register Write Protection bit
   433                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   434                           ;	Boot Block Write Protection bit
   435                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   436                           ;	Data EEPROM Write Protection bit
   437                           ;	WRTD = OFF, Data EEPROM is not write-protected
   438   30000B                     	org	3145739
   439   30000B  E0                 	db	224
   440                           
   441                           ;Config register CONFIG7L @ 0x30000C
   442                           ;	Table Read Protection bit
   443                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   444                           ;	Table Read Protection bit
   445                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   446                           ;	Table Read Protection bit
   447                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   448                           ;	Table Read Protection bit
   449                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   450   30000C                     	org	3145740
   451   30000C  0F                 	db	15
   452                           
   453                           ;Config register CONFIG7H @ 0x30000D
   454                           ;	Boot Block Table Read Protection bit
   455                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   456   30000D                     	org	3145741
   457   30000D  40                 	db	64
   458                           tosu	equ	0xFFF
   459                           tosh	equ	0xFFE
   460                           tosl	equ	0xFFD
   461                           stkptr	equ	0xFFC
   462                           pclatu	equ	0xFFB
   463                           pclath	equ	0xFFA
   464                           pcl	equ	0xFF9
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           prodh	equ	0xFF4
   470                           prodl	equ	0xFF3
   471                           indf0	equ	0xFEF
   472                           postinc0	equ	0xFEE
   473                           postdec0	equ	0xFED
   474                           preinc0	equ	0xFEC
   475                           plusw0	equ	0xFEB
   476                           fsr0h	equ	0xFEA
   477                           fsr0l	equ	0xFE9
   478                           wreg	equ	0xFE8
   479                           indf1	equ	0xFE7
   480                           postinc1	equ	0xFE6
   481                           postdec1	equ	0xFE5
   482                           preinc1	equ	0xFE4
   483                           plusw1	equ	0xFE3
   484                           fsr1h	equ	0xFE2
   485                           fsr1l	equ	0xFE1
   486                           bsr	equ	0xFE0
   487                           indf2	equ	0xFDF
   488                           postinc2	equ	0xFDE
   489                           postdec2	equ	0xFDD
   490                           preinc2	equ	0xFDC
   491                           plusw2	equ	0xFDB
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     266
                                              4 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     0      4     174
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
ABS                  0      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          69      0       0      21        0.0%
BITBIGSFRlh          8      0       0      22        0.0%
BITBIGSFRll         2D      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 29 17:11:15 2023

                     l11 7F74                       l13 7FB6                       l24 7F6C  
                     u40 7F6C                       u41 7F68                       u50 7FB6  
                     u51 7FB2                       u60 7FF8                       u61 7FF4  
                    l730 7F4C                      l732 7F4C                      l742 7F82  
                    l734 7F6E                      l744 7F96                      l736 7F7A  
                    l754 7FC4                      l746 7F9A                      l756 7FD8  
                    l748 7FBC                      l758 7FDC                     _main 7F6E  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _delay 7F4C                    main@x 0005                    status 0FD8  
        __initialization 7F46             __end_of_main 8000                   ??_main 0005  
          __activetblptr 0000                   ?_delay 0001                   isa$std 0001  
             __accesstop 0060  __end_of__initialization 7F46            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 7F6E                  ??_delay 0005  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F46  
                __ramtop 0800                  __ptext0 7F6E                  __ptext1 7F4C  
   end_of_initialization 7F46                _TRISEbits 0F96      start_initialization 7F46  
              delay@cntr 0001                 _LATEbits 0F8D                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@x_81 0007  
